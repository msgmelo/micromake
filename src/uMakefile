CC = gcc
FLAGS = -g -Wall

umake: umake.o arg_parse.o target.o list.o str_node.o processline.o
	${CC} ${FLAGS} umake.o arg_parse.o target.o list.o str_node.o processline.o -o umake
	echo done umake

umake.o: umake.c arg_parse.h target.h list.h str_node.h processline.h
	${CC} ${FLAGS} -c -o umake.o umake.c 
	echo done umake.o

processline.o: processline.c processline.h arg_parse.h target.h str_node.h list.h
	${CC} ${FLAGS} -c -o processline.o processline.c
	echo done processline.o

arg_parse.o: arg_parse.c arg_parse.h list.h
	${CC} ${FLAGS} -c -o arg_parse.o arg_parse.c 
	echo done arg_parse.o

target.o: target.c target.h arg_parse.h list.h str_node.h
	${CC} ${FLAGS} -c -o target.o target.c 
	echo done target.o

str_node.o: str_node.c str_node.h list.h
	${CC} ${FLAGS} -c -o str_node.o str_node.c 
	echo done str_node.o

list.o: list.c list.h
	${CC} ${FLAGS} -c -o list.o list.c
	echo done list.o

clean:	
	ls *.o
	rm -f umake core *.o
